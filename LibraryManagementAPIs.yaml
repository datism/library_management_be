openapi: 3.0.3
info:
  description: Api of web library project
  version: 1.0.0
  title: Library REST APIs
  contact:
    name: Trinh Dat
    email: trinhdat260901@gmail.com
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'

paths:
  /copies:
    get:
      tags:
        - BookCopy
      summary: Get all copies
      operationId: getBook
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Copy'

    post:
      tags:
        - BookCopy
      summary: Add a new copy to the library
      description: Add a new copy to the library
      operationId: addCopy
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bookId:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Copy'
        '405':
          description: Invalid input

  /copies/{copyId}:
    get:
      tags:
        - BookCopy
      summary: Find copy by ID
      description: Returns a single book
      operationId: getCopyById
      parameters:
        - name: copyId
          in: path
          description: ID of copy to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Copy'
        '404':
          description: Book not found
    put:
      tags:
        - BookCopy
      summary: Update copy status
      operationId: updateCopyById
      parameters:
        - name: copyId
          in: path
          description: ID of copy to return
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - losted
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Copy'

  /books:
    post:
      tags:
        - Book
      summary: Add a new book to the library
      requestBody:
        content:
          multipart/form-data:
            schema:
              allOf:
                - $ref: '#/components/schemas/BookInfo'
                - type: object
                  properties:
                    cover:
                      type: string
                      format: binary
            encoding:
              cover:
                contentType: image/png, image/jpeg
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
    get:
      tags:
        - Book
      summary: Get all books
      responses:
        '200':
          description: Successful operation
          content:
            multipart/form-data:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BookInfo'
                  - type: object
                    properties:
                      cover:
                        type: string
                        format: binary
              encoding:
                cover:
                  contentType: image/png, image/jpeg
                
  /books/{bookId}:
    get:
      tags:
        - Book
      summary: Get book by ID
      parameters:
        - name: bookId
          in: path
          description: ID of book to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'

    put:
      tags:
        - Book
      requestBody:
        content:
          multipart/form-data:
            schema:
              allOf:
                - $ref: '#/components/schemas/BookInfo'
                - type: object
                  properties:
                    cover:
                      type: string
                      format: binary
            encoding:
              cover:
                contentType: image/png, image/jpeg
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'

    delete:
      tags:
        - Book
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'

  /borrows:
    get:
      tags:
        - borrow
      summary: Get an reader's borrow requests
      operationId: getBorrowRequestByBorrowerId
      parameters:
        - name: subscriberId
          in: query
          description: 'The name that needs to be fetched.'
          required: false
          schema:
            type: string
        - name: copyId
          in: query
          description: 'The copy that needs to be fetched.'
          schema:
            type: string
        - name: status
          in: query
          description: 'The status that needs to be fetched.'
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Borrow'
                  
    post:
      tags:
        - borrow
      summary: Create a new borrow request
      operationId: addBookRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subscriber:
                  type: string
                copy:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Borrow'
        '405':
          description: Invalid input

  /borrows/{borrowId}:
    get:
      tags:
        - borrow
      summary: Get borrow by id
      operationId: getBorrowRequest
      parameters:
        - in: query
          name: borrowId
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Borrow'
    put:
      tags:
        - borrow
      summary: Update an existing borrow request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Borrow'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          description: Invalid ID supplied
        '404':
          description: Book not found
        '405':
          description: Validation exception


  /subscribers:
    get:
      tags:
        - Subscriber
      summary: Get all subscribers
      operationId: getSubscribers
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber'

    post:
      tags:
        - Subscriber
      summary: Creat a new subscriber
      operationId: addSubscriber
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscriber'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
        '405':
          description: Invalid input

  /auth/login:
    post:
      tags:
        - auth
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
                type: object
                properties:
                  name:
                    type: string
                  password:
                    type: string
      responses:
        '200':
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied

  /auth/signup:
    post:
      tags:
        - auth
      summary: register
      description: ''
      operationId: signupUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                password:
                  type: string
      responses:
        '400':
          description: Invalid username/password supplied
        '401':
          description: Account exist
        '201':
          description: successful operation

components:
  schemas:
    Copy:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
          format: date
        status:
          type: string
          enum:
            - available
            - pending
            - borrowed
            - lost
        book:
          $ref: '#/components/schemas/Book'

    Book:
      allOf:
        - $ref: "#/components/schemas/BookInfo"
        - type: object
          properties:
            image:
              type: object
              properties:
                data:
                  type: string
                contentType:
                  type: string


    Borrow:
      type: object
      properties:
        _id:
          type: string
        subscriber:
          $ref: '#/components/schemas/Subscriber'
        copy:
          $ref: '#/components/schemas/Copy'
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        status:
          type: string
          enum:
            - inProgress
            - returned
            - lost
            - overdue

    Subscriber:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        email:
          type: string
        phone:
          type: string

    User:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        password:
          type: string
        role:
          type: string
          enum:
            - admin

    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string

    BookInfo:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        description:
          type: string
        category:
          type: string
          enum:
            - Essays
            - Case Studies
            - Syllabus
            - Thesis
        type:
          type: string
          enum:
            - Art
            - Language
            - Literature
            - Gymnastics
            - Physics
            - Chemistry
            - Biology
            - Math
            - History
        author:
          type: string
        publisher:
          type: string
        publishedDate:
          type: string
          format: date
